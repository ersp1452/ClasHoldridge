#
#nombrePrograma: Proyecto01ZonasdeVidadeHoldridge.py
#
#Descripcion: Este programa te dice que tipo de zona de vida de Holdridge es segun los datos ingresados.
#
#Autor: SERAS PEREZ, Erik Rony
#Fecha: 17.Junio.2017
#

import sys

def crearMatriz(x):
    x = []
    for i in range(8):
        x.append([0]*13)
    print("La Matriz ha sido creada...")
    return x

def mostrarMatriz(x, nombre, lat, hLat, long, hLong, alt, años):
    print("\n\t\tCuadro de factores climáticos del área de", nombre, "durante los años", años)
    print("\n\tLatitud (grados):", lat," ", hLat, end="")
    print("\tLongitud (grados):", long," ", hLong, end="")
    print("\tAlitud (msnm):", alt)
    print("\n     Mes    ", end="")
    x[0] = ["      Enero     ", "     Febrero    ", "      Marzo     ", "      Abril     ", "      Mayo      ", "      Junio     ", "     Julio      ", "      Agosto    ", "   Septiembre   ","     Octubre    ", "   Noviembre    ","    Diciembre   ", "      Anual     "]
    for j in range(13):
        elem=x[0][j]
        print(elem,end="")
    print("")
    print("  T media   ", end="")
    for j in range(13):
        elem=x[1][j]
        print("{0:^16.2f}".format(elem),end="")
    print("")
    print("T max media ", end ="")
    for j in range(13):
        elem=x[2][j]
        print("{0:^16.2f}".format(elem),end="")
    print("")
    print("T min media ", end="")
    for j in range(13):
        elem=x[3][j]
        print("{0:^16.2f}".format(elem),end="")
    print("")
    print("   Biotem   ", end="")
    for j in range(13):
        elem=x[4][j]
        print("{0:^16.2f}".format(elem),end="")
    print("")
    print("     pp     ", end="")
    for j in range(13):
        elem=x[5][j]
        print("{0:^16.2f}".format(elem),end="")
    print("")
    print("     ET     ", end="")
    for j in range(13):
        elem=x[6][j]
        print("{0:^16.2f}".format(elem),end="")
    print("")
    print("    RET     ", end="")
    for j in range(13):
        elem=x[7][j]
        print("{0:^16.6f}".format(elem),end="")
    
    print("")

def ingresarTm(x):
    print("\n\t\tTemperatura Media\n")
    for j in range(12):
        print("\nMes", j + 1, ":")
        tM = float(input("\tIngrese temperatura (°C): "))
        x[1][j] = tM
    return x

def ingresarTmaxm(x):      
    print("\n\t\tTemperatura Maxima Media\n")
    for j in range(12):
        print("\nMes", j + 1, ":")
        tmMin = float(input("\tIngrese temperatura (°C): "))
        x[2][j] = tmMin
    return x

def ingresarTminm(x):        
    print("\n\t\tTemperatura Minima Media\n")
    for j in range(12):
        print("\nMes", j + 1, "-:")
        tmMax = float(input("\tIngrese temperatura (°C): "))
        x[3][j] = tmMax
    return x

def ingresarPpm(x):        
    print("\n\t\tPrecipitación mensual\n")
    for j in range(12):
        print("\nMes", j + 1, ":")
        pp = float(input("\tIngrese precipitacion(mm): "))
        x[5][j] = pp
    return x

def transformarDatos1(x, lat):
    
    #Biotemperatura (Biotemp)
    for j in range(12):
        if x[1][j] >= 6 and x[1][j] <= 24:
            x[4][j] = x[1][j]
        if x[1][j] > 24:
            x[4][j] = x[1][j] - (3*lat/100*(x[1][j] - 24)**2)
        if x[1][j] < 6 and x[1][j] > 0:
            x[4][j] = x[2][j]/(x[2][j] - x[3][j])*(x[2][j]/2)
        if x[1][j] <= 0:
            x[4][j] = x[2][j]/2
    
    sumBiotemp = 0
    for j in range(12):
        sumBiotemp += x[4][j]

    #Biotemperatura promedio anual = x[4][12]
    x[4][12] = sumBiotemp/12 

    ppAnual = 0
    for j in range(12):
        ppAnual += x[5][j]

    #Precipitación anual (ppAnual) = x[5][12]
    x[5][12] = ppAnual

    #Evapotranspiración potencial(ET)
    for j in range(12):
        if j == 0 or j == 2 or j == 4 or j == 6 or j == 7 or j == 9 or j == 11:
            x[6][j] = 5*x[4][j]
        if j == 3 or j == 5 or j == 8 or j == 10:
            x[6][j] = 4.84*x[4][j]
        if j == 1:
            x[6][j] = 4.56*x[4][j]
    sumET = 0
    for j in range(12):
        sumET += x[6][j]
        
    #Evapotranspiración potencial anual (sumET) = x[6][12]
    x[6][12] = sumET

    #Relacion de Evapotranspiración (RET) de cada mes
    for j in range(12):
        if x[5][j] > 0:
            x[7][j] = x[6][j]/x[5][j]
        else:
            x[7][j] = 0
      
    #Relacion de Evapotranspiración (RET) = x[7][12]
    #Evapotranspiración potencial anual (sumET) = x[6][12]
    #Precipitación anual (ppAnual) = x[5][12]
    Ret = x[6][12]/x[5][12]
    x[7][12] = Ret

    return x

def ingresarTma(x):
    Tma = float(input("\tTemperatura Media Anual (°C): "))
    x[1][12] = Tma
    return x

def ingresarTmamax(x):
    Tmamax = float(input("\tTemperatura Máxima Media Anual (°C): "))
    x[2][12] = Tmamax
    return x

def ingresarTmamin(x):
    Tmamin = float(input("\tTemperatura Mínima Media Anual (°C): "))
    x[3][12] = Tmamin
    return x

def ingresarPpa(x):
    Ppa = float(input("\tPrecipitación Anual (mm): "))
    x[5][12] = Ppa
    return x

def transformarDatos2(x, lat):
    #Biotemperatura Anual
    Biotem = 0
    a = x[1][12]
    if a >= 6 and a <= 24:
        Biotem= a
    if a > 24:
        Biotem = a - (3*lat/100*(a - 24)**2)
    if a < 6 and a > 0:
        Biotem = x[2][12]/(x[2][12] - x[3][12])*(x[2][12]/2)
    if a <= 0:
        Biotem = x[2][12]/2
    x[4][12] = Biotem
    #Evapotranspiración
    Evt = (x[4][12]) * 58.93
    x[6][12] = Evt
    #Relacion de Evapotranspiración (RET) = x[7][12]
    #Evapotranspiración potencial anual (sumET) = x[6][12]
    #Precipitación anual (ppAnual) = x[5][12]
    Ret = x[6][12]/x[5][12]
    x[7][12] = Ret
    return x

def zonaVida(x):
    e = ""
        
    if x[5][12] >= 15.625 and x[5][12] < 31.25:
          if x[4][12] >= 12   and x[4][12] < 24:
              if x[7][12] >= 32 and x[7][12] < 64:
                e = "Desierto"
                return e
        
    if x[5][12] >= 31.25 and x[5][12] < 62.5:
        if x[4][12] >= 6  and x[4][12] < 12:
            if x[7][12] >= 8 and x[7][12] < 16:
                e = "Desierto"
                return e
        if x[4][12] >= 12  and x[4][12] < 24:
            if x[7][12] >= 16 and x[7][12] < 32:
                e = "Desierto"
                return e
        
    if x[5][12] >= 62.5 and x[5][12] < 125:
        if x[4][12] >= 1.5 and x[4][12] < 3:
            if x[7][12] >= 1 and x[7][12] < 2:
                e = "Tundra Seca"
                return e
        if x[4][12] >= 3 and x[4][12] < 6:
            if x[7][12] >= 2 and x[7][12] < 4:
                e = "Desierto"
                return e
        if x[4][12] >= 6 and x[4][12] < 12:
            if x[7][12] >= 4 and x[7][12] < 8:
                e = "Desierto"
            return e
        if x[4][12] >= 12 and x[4][12] < 24:
            if x[7][12] >= 8 and x[7][12] < 16:
                e = "Desierto"
            return e
        if x[4][12] >= 24:
            if x[7][12] >= 16 and x[7][12] < 32:
                e = "Desierto"
            return e

    if x[5][12] >= 125 and x[5][12] < 250:
        if x[4][12] >= 1.5 and x[4][12] < 3:
            if x[7][12] >= 0.5 and x[7][12] < 1:
                e = "Tundra Húmeda"
                return e
        if x[4][12] >= 3 and x[4][12] < 6:
            if x[7][12] >= 1 and x[7][12] < 2:
                e = "Matorral Desértico"
                return e
        if x[4][12] >= 6 and x[4][12] < 12:
            if x[7][12] >= 2 and x[7][12] < 4:
                e = "Matorral Desértico"
                return e
        if x[4][12] >= 12 and x[4][12] < 24:
            if x[7][12] >= 4 and x[7][12] < 8:
                e = "Matorral Desértico"
                return e
        if x[4][12] >= 24:
            if x[7][12] >= 8 and x[7][12] < 16:
                e = "Matorral Desértico"
                return e

    if x[5][12] >= 250 and x[5][12] < 500:
        if x[4][12] >= 1.5 and x[4][12] < 3:
            if x[7][12] >= 0.25 and x[7][12] < 0.5:
                e = "Tundra muy Húmeda"
                return e
        if x[4][12] >= 3 and x[4][12] < 6:
            if x[7][12] >= 0.5 and x[7][12] < 1:
                e = "Páramo Húmedo"
                return e
        if x[4][12] >= 6 and x[4][12] < 12:
            if x[7][12] >= 1 and x[7][12] < 2:
                e = "Estepa"
                return e
        if x[4][12] >= 12 and x[4][12] < 18:
            if x[7][12] >= 2 and x[7][12] < 4:
                e = "Estepa Espinosa"
                return e
        if x[4][12] >= 18 and x[4][12] < 24:
            if x[7][12] >= 2 and x[7][12] < 4:
                e = "Monte Espinoso"
                return e
        if x[4][12] >= 24:
            if x[7][12] >= 4 and x[7][12] < 8:
                e = "Monte Espinoso"
                return e

    if x[5][12] >= 500 and x[5][12] < 1000:
        if x[4][12] >= 1.5 and x[4][12] < 3:
            if x[7][12] >= 0.125 and x[7][12] < 0.25:
                e = "Tundra Pluvial"
                return e
        if x[4][12] >= 3  and x[4][12] < 6:
            if x[7][12] >= 0.25 and x[7][12] < 0.5:
                e = "Paramo muy Humedo"
                return e
        if x[4][12] >= 6 and x[4][12] < 12:
            if x[7][12] >= 0.5 and x[7][12] < 1:
                e = "Bosque Húmedo"
                return e
        if x[4][12] >= 12 and x[4][12] < 24:
            if x[7][12] >= 1 and x[7][12] < 2:
                e = "Bosque Seco"
                return e
        if x[4][12] >= 24:
            if x[7][12] >= 2 and x[7][12] < 4:
                e = "Bosque muy Seco"
                return e
        
    if x[5][12] >= 1000 and x[5][12] < 2000:
        if x[4][12] >= 3 and x[4][12] < 6:
            if x[7][12] >= 0.125 and x[7][12] < 0.25:
                e = "Páramo Pluvial"
                return e
        if x[4][12] >= 6 and x[4][12] < 12:
            if x[7][12] >= 0.25 and x[7][12] < 0.5:
                e = "Bosque muy Húmedo"
                return e
        if x[4][12] >= 12 and x[4][12] < 24:
            if x[7][12] >= 0.5 and x[7][12] < 1:
                e = "Bosque Húmedo"
                return e
        if x[4][12] >= 24:
            if x[7][12] >= 1 and x[7][12] < 2:
                e = "Bosque Seco"
                return e
        
    if x[5][12] >= 2000 and x[5][12] < 4000:
        if x[4][12] >= 3 and x[4][12] < 6:
            if x[7][12] >= 0.0625 and x[7][12] < 0.125:
                e = "Páramo Pluvial"
                return e
        if x[4][12] >= 6 and x[4][12] < 12:
            if x[7][12] >= 0.125 and x[7][12] < 0.25:
                e = "Bosque Pluvial"
                return e
        if x[4][12] >= 12 and x[4][12] < 24:
            if x[7][12] >= 0.25 and x[7][12] < 0.5:
                e = "Bosque muy Húmedo"
                return e
        if x[4][12] >=  24:
            if x[7][12] >= 0.5 and x[7][12] < 1:
                e = "Bosque Húmedo"
                return e      

    if x[5][12] >= 4000 and x[5][12] <8000:
        if x[4][12] >= 6  and x[4][12] < 12:
            if x[7][12] >= 0.0625 and x[7][12] < 0.125:
                e = "Bosque Pluvial"
                return e
        if x[4][12] >= 12  and x[4][12] < 24:
            if x[7][12] >= 0.125 and x[7][12] < 0.25:
                e = "Bosque Pluvial"
                return e
        if x[4][12] >= 24:
            if x[7][12] >= 0.25 and x[7][12] < 0.50:
                e = "Bosque muy Húmedo"
                return e

    if x[5][12] >= 8000 and x[5][12] < 16000:
        if x[4][12] >= 12  and x[4][12] < 24:
            if x[7][12] >= 0.0625 and x[7][12] < 0.125:
                e = "Bosque Pluvial"
                return e
        if x[4][12] >= 24:
            if x[7][12] >= 0.125 and x[7][12] < 0.25:
                e = "Bosque Pluvial"
                return e
    return ("Zona de transición")
    
def provinciaHumedad(x):
    e = ""
    if x[7][12] >= 0 and x[7][12] < 0.03125:
        e = "Saturado"
        return e
    if x[7][12] >= 0.03125 and x[7][12] < 0.0625:
        e = "Subsaturado"
        return e
    if x[7][12] >= 0.0625 and x[7][12] < 0.125:
        e = "Semisaturado"
        return e
    if x[7][12] >= 0.125 and x[7][12] < 0.25:
        e = "Superhúmedo"
        return e
    if x[7][12] >= 0.25 and x[7][12] < 0.50 :
        e = "Perhúmedo"
        return e
    if x[7][12] >= 0.50 and x[7][12] < 1.00:
        e = "Húmedo"
        return e
    if x[7][12] >= 1.00 and x[7][12] < 2.00 :
        e = "Subhúmedo"
        return e
    if x[7][12] >= 2.00 and x[7][12] < 4.00:
        e = "Semiárido"
        return e
    if x[7][12] >= 4.00 and x[7][12] < 8.00:
        e = "Arido"
        return e
    if x[7][12] >= 8.00 and x[7][12] < 16.00:
        e = "Perárido"
        return e
    if x[7][12] >= 16.00 and x[7][12] < 32.00:
        e = "Superárido"
        return e
    if x[7][12] >= 32.00:
        e = "Desecado"
        return e

def pisoAltitudinal(x):
    e =""
    if x[4][12] >= 0 and x[4][12] < 1.5:
        e = "Nival"
        return e
    
    if x[4][12] >= 1.5 and x[4][12] < 3:
        e = "Alpino"
        return e
    
    if x[4][12] >= 3 and x[4][12] < 6:
        e = "Subalpino"
        return e
    
    if x[4][12] >= 6 and x[4][12] < 12:
        e = "Montano"
        return e
    
    if x[4][12] >= 12 and x[4][12] < 18:
        e = "Montano Bajo"
        return e
    
    if x[4][12] >= 18 and x[4][12] < 24:
        e = "Premontano"
        return e
    
    if x[4][12] >= 24:
        e = "Basal"
        return e
    
def regionLatitudinal(x):
    e = ""
    if x[4][12] >= 0 and x[4][12] < 1.5:
        e = "Polar"
        return e
    
    if x[4][12] >= 1.5 and x[4][12] < 3:
        e = "Subpolar"
        return e
    
    if x[4][12] >= 3 and x[4][12] < 6:
        e = "Boreal"
        return e
    
    if x[4][12] >= 6 and x[4][12] < 12:
        e = "Templada Fría"
        return e
    
    if x[4][12] >= 12 and x[4][12] < 18:
        e = "Templada Cálida"
        return e
    
    if x[4][12] >= 18 and x[4][12] < 24:
        e = "Subtropical"
        return e
    
    if x[4][12] >= 24:
        e = "Tropical"
        return e     
    
def motrarHoldridge(x, nombre, a, b, c, d):
    print("\nLa region", nombre, "tiene por composición los siguientes factores:\n")
    print("\tZona de Vida (ZV):", a,)
    print("\n\tProvincia de Humedad (PH):", b)
    print("\n\tPiso Altitudinal (PA):", c)
    print("\n\tRegion Latitudinal (RL):", d)
    print("Biotemperatura promedio anual (°C):", x[4][12])
    print("Precipitacion Anual (mm)", x[5][12])
    print("Evapotranspiracion Potencial:", x[6][12])
    print("Relacion de Evapotranspiracion:", x[7][12])
    
def menu():
    opc = -1
    while(opc < 0 or opc > 17):
        print("\n\tZONAS DE VIDA DE HOLDRIDGE EN PYTHON\n")
        print("0. TERMINAR")
        print("1. Crear/Resetear Tabla")
        print("2. Mostrar Tabla")
        print("Metodo 1: Datos Mensuales")
        print("3. Ingresar Temperatura Media Mensual (°C)")
        print("4. Ingresar Temperatura Máxima Media Mensual (°C)")
        print("5. Ingresar Temperatura Mínima Media Mensual (°C)")
        print("6. Ingresar Precipitación mensual (mm)")
        print("7. Transformar Datos del Método 1 (Biotemperatura, ETo, RET)")
        print("Método 2: Datos Anuales")
        print("8. Ingresar Temperatura Media Anual (°C)")
        print("9. Ingresar Temperatura Máxima Media Anual  (°C)")
        print("10. Ingresar Temperatura Mínima Media Anual (°C)")
        print("11. Ingresar Precipitación Anual (°C)")
        print("12. Transformar Datos del Método 2 (Biotemperatura, ETo, RET)")
        print("Características de la Zona de Vida de Holdridge")
        print("13. Hallar Zona de Vida")
        print("14. Hallar Provincia de Humedad")
        print("15. Hallar Piso Altitudinal")
        print("16. Hallar Región Latitudinal")
        print("17. Mostrar la clasificación de la región por Holdridge")
        print("Digite su opción: ",end="")
        opc = int(input())
    return opc
   
def operaciones():
    x = []
    print("\tBienvenido al programa. Este te ayudara en la clasificación de zonas de vida en el mundo\n")
    nombre = str(input("Ingrese nombre de la región: "))
    lat = float(input("Ingresa latitud en grados: "))
    hLat = str(input("Ingrese hemisferio \"S\" o \"N\": "))
    long = float(input("Ingresa longitud en grados: "))
    hLong = str(input("Ingrese hemisferio \"E\" u \"O\": "))
    alt = float(input("Ingrese altitud de la región (msnm): "))
    años = str(input("Intervalo de años del cual ingresara los datos (ejemplo: 1980-1994): "))
    opc = menu()
    while opc != 18:
        if opc == 0:
            print("El programa ha terminado. Muchas gracias por utilizarlo.")
            sys.exit(0)
        elif opc == 1:
            x = crearMatriz(x)
        elif opc == 2:
            mostrarMatriz(x, nombre, lat, hLat, long, hLong, alt, años)
        elif opc == 3:
            x = ingresarTm(x)
        elif opc == 4:
            x = ingresarTmaxm(x)
        elif opc == 5:
            x = ingresaeTminm(x)
        elif opc == 6:
            x = ingresarPpm(x)
        elif opc == 7:
            x = transformarDatos1(x, lat)
        elif opc == 8:
            x = ingresarTma(x)
        elif opc == 9:
            x = ingresarTmamax(x)
        elif opc == 10:
            x = ingresarTmamin(x)
        elif opc == 11:
            x = ingresarPpa(x)
        elif opc == 12:
            x = transformarDatos2(x, lat)
        elif opc == 13:
            a = zonaVida(x)
        elif opc == 14:
            b = provinciaHumedad(x)
        elif opc == 15:
            c = pisoAltitudinal(x)
        elif opc == 16:
            d = regionLatitudinal(x)
        else:
            motrarHoldridge(x, nombre, a, b, c, d)
        opc = menu()
operaciones()
